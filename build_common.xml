<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	文件名： build_common.xml
	创建日期： 2010/4/8
	描述：
		 实际构建过程的定义。
-->

<project name="build_common" default="" basedir=".">

	<!-- ######属性定义部分###### -->
	<!-- 项目的目录属性定义 -->
	<property name="src" value="${project_path}\src" />
	<property name="extother" value="${project_path}\extother" />
	<!-- 源代码 -->
	<property name="tempsrc" value="${project_path}\tempsrc" />
	<!-- 源代码目录 -->
	<property name="res" value="${project_path}\res" />
	<!-- 资源 -->
	<property name="lib" value="${project_path}\libs" />
	<!-- 库 -->
	<property name="assets" value="${project_path}\assets" />
	<!-- assets -->
	<property name="bin" value="${project_path}\bin" />
	<!-- 包目录 -->
	<property name="classes" value="${bin}\classes" />
	<!-- classes -->
	<property name="gen" value="${project_path}\gen" />
	<!-- 生成R.java -->

	<property name="proguard.cfg" value="${project_path}\proguard.cfg" />
	<!-- 时间戳属性定义，用于包的文件名 -->
	<tstamp>
		<format property="timestamp" pattern="yyyyMMddHHmmss" />
	</tstamp>

	<!-- 编码设置 -->
	<property name="encoding" value="UTF-8" />

	<!-- 安装包文件名 -->
	<property name="file_name" value="${file_name_prefix}_${timestamp}" />

	<!-- Android相关属性定义-->
	<property name="android_framework" value="${android_tools}\lib\framework.aidl" />
	<property name="dex" value="${bin}\classes.dex" />
	<property name="aapt" value="${android_platform_tools}\aapt" />
	<property name="aidl" value="${android_platform_tools}\aidl" />
	<property name="adb" value="${android_platform_tools}\adb" />
	<property name="dx" value="${android_platform_tools}\dx.bat" />
	<property name="apkbuilder" value="${android_home}\tools\apkbuilder.bat" />
	<property name="signer" value="jarsigner" />
	<!-- 注意，这里的android sdk的版本，请参考Android-versions.txt对应表进行设置-->
	<property name="androidjar" value="${android_home}\platforms\android-16\android.jar" />
	<!-- ######属性定义部分结束###### -->

	<!-- ###### Target定义部分 ###### -->
	<target name="clean">
		<echo>清理中...</echo>
		<delete dir="${classes}" />
		<delete dir="${bin}" />
		<delete dir="${tempsrc}" />
		<echo>完成清理：</echo>
	</target>

	<target name="init">
		<echo>初始化中...</echo>
		<mkdir dir="${bin}" />
		<mkdir dir="${lib}" />
		<mkdir dir="${classes}" />
		<mkdir dir="${gen}" />
		<mkdir dir="${tempsrc}" />

		<echo>copy source code to tempsrc...</echo>
		<copy todir="${tempsrc}" filtering="true">
			<fileset dir="${src}">
				<include name="**/*.java" />
				<include name="**/*.aidl" />
			</fileset>
		</copy>
	</target>

	<!-- 为该项目资源生成R.java文件 -->
	<target name="generate">
		<echo>Generating R.java / Manifest.java from the resources...</echo>
		<exec executable="${aapt}" failonerror="true">
			<arg value="package" />
			<arg value="-m" />
			<arg value="-J" />
			<arg value="${gen}" />
			<arg value="-M" />
			<arg value="${project_path}\AndroidManifest.xml" />
			<arg value="-S" />
			<arg value="${res}" />
			<arg value="-I" />
			<arg value="${androidjar}" />
			<arg value="--extra-packages"/>
			<arg value="com.tencent.common"/>
		</exec>
	</target>

	<!-- 从*.aidl文件生成java classes -->
	<target name="aidl">
		<echo>Compiling aidl files into Java classes...</echo>
		<apply executable="${aidl}" failonerror="true">
			<!-- <arg value="-p${android_framework}" /> -->
			<arg value="-I${tempsrc}" />
			<fileset dir="${tempsrc}">
				<include name="**/*.aidl" />
			</fileset>
		</apply>
	</target>

	<!-- 编译项目的.java文件为.class文件 -->
	<target name="compile">
		<echo>开始编译...</echo>
		<javac encoding="UTF-8" debug="false" extdirs="" target="1.6" destdir="${classes}" bootclasspath="${androidjar}">
			<src path="${tempsrc}" />
			<src path="${gen}" />
			<classpath>
				<fileset dir="${lib}" includes="*.jar" />
			</classpath>
		</javac>
		<echo>结束编译...</echo>
	</target>

	<!-- 打包 -->
	<target name="package">
		<jar basedir="${classes}" destfile="temp.jar" />
	</target>

	<!-- 对打包后的结果进行混淆 -->
	<target name="obfuscate">
		<java jar="${proguard_home}\lib\proguard.jar" fork="true" failonerror="true">
			<jvmarg value="-Dmaximum.inlined.code.length=32" />
			<arg value="-injars temp.jar" />
			<arg value="-outjars obfuscated.jar" />
			<arg value="-libraryjars ${androidjar}" />
			<arg value="-libraryjars ${lib}" />
		
			
			<arg value="-include ${proguard.cfg}" />		 
			<!-- <arg value="-optimizationpasses 7"/>  -->
			<arg value="-printmapping ${project_path}\mapping.txt" />
			<arg value="-renamesourcefileattribute ProGuard" />
			<arg value="-keepattributes SourceFile,LineNumberTable" />
		</java>
		<delete file="temp.jar" />
		<delete dir="${classes}" />
		<mkdir dir="${classes}" />
		<unzip src="obfuscated.jar" dest="${classes}" />
		<delete file="obfuscated.jar" />
	</target>

	<!-- 将该项目经过混淆的.class文件转换为.dex文件 -->
	<target name="dex">
		<echo>Converting compiled files ${classes} and external libraries into ${dex}...</echo>
		<apply executable="${dx}" failonerror="true" parallel="true">
			<arg value="--dex" />
			<arg value="--output=${dex}" />
			<arg path="${classes}" />
			<fileset dir="${lib}" includes="*.jar" />
		</apply>
	</target>

	<!-- 打包项目的资源文件 -->
	<target name="package_res_with_assets">
		<echo>Packaging resources and assets...</echo>
		<exec executable="${aapt}" failonerror="true">
			<arg value="package" />
			<arg value="-f" />
			<arg value="-M" />
			<arg value="${project_path}\AndroidManifest.xml" /> 
			<arg value="-S" />
			<arg value="${res}" />
			<arg value="-A" />
			<arg value="${assets}" />
			<arg value="-I" />
			<arg value="${androidjar}" />
			<arg value="-F" />
			<arg value="${bin}\${project_name}.ap_" />
		</exec>
	</target>

	<!-- 打包项目资源文件，但不包括assets -->
	<target name="package_res_without_assets">
		<echo>Packaging resources...</echo>
		<exec executable="${aapt}" failonerror="true">
			<arg value="package" />
			<arg value="-f" />
			<arg value="-M" />
			<arg value="${project_path}\AndroidManifest.xml" />
			<arg value="-S" />
			<arg value="${res}" />
			<!-- No assets directory -->
			<arg value="-I" />
			<arg value="${androidjar}" />
			<arg value="-F" />
			<arg value="${bin}\${project_name}.ap_" />
		</exec>
	</target>

	<!-- 打包应用，此处不做签名，在后续的步骤中可以使用商业发布的密钥文件进行签名 -->
	<target name="release">
		<echo>Packaging ${out-unsigned-package} for release...</echo>
		<exec executable="${apkbuilder}" failonerror="true">
			<arg value="${bin}\${file_name}_unsigned.apk" />
			<arg value="-u" />
			<arg value="-z" />
			<arg value="${bin}\${project_name}.ap_" />
			<arg value="-f" />
			<arg value="${dex}" />
			<arg value="-rf" />
			<arg value="${tempsrc}" />
			<arg value="-rj" />
			<arg value="${lib}" />
			<arg value="-nf" />
			<arg value="${lib}" />

		</exec>
		<echo>It will need to be signed with jarsigner before being published.</echo>

		<echo>仅保留apk文件...</echo>
		<delete includeemptydirs="true">
			<fileset dir="${bin}" excludes="*.apk" />
		</delete>
		<delete dir="${tempsrc}" />
	</target>


	<target name="sign">
		<echo>begin sign...</echo>
		<exec executable="${signer}" failonerror="true">
			<arg value="-verbose"/>
			<arg value="-keystore"/> 
			<arg value="${keystore}"/>
			<arg value="-storepass"/>
			<arg value="${key_pass}"/>
			<arg value="-keypass"/>
			<arg value="${key_pass}"/>
			<arg value="-digestalg"/>
			<arg value="SHA1"/>
			<arg value="-sigalg"/>
			<arg value="MD5withRSA"/>
			<arg value="-signedjar"/>
			<arg value="${bin}\${file_name}.apk" />
			<arg value="${bin}\${file_name}_unsigned.apk" />
			<arg value="${key_name}"/>
		</exec>	
		<echo>end sign...</echo>
		<delete file = "${bin}\${file_name}_unsigned.apk" />
	</target>
	
	<target name = "unzip_test">
	    <echo>begin unzip...</echo>
	    <unzip src = "${project_path}\android_qzone_sign.apk" dest = "${bin}\android_qzone" />
	        <echo>end unzip...</echo>
	</target>

	<target name = "move_plugin">
	    <echo>begin move_plugin...</echo>
	    <move file="${bin}\${file_name}_unsigned.apk" todir="${bin}\android_qzone\assets" />
	        <echo>end move_plugin...</echo>
	</target>
	
	<target name = "delete_cer">
	    <echo>begin delete...</echo>
	    <delete file = "${bin}\android_qzone\META-INF\CERT.RSA" />
	    <delete file = "${bin}\android_qzone\META-INF\CERT.SF" />
	        <echo>end delete...</echo>
	</target>

	<target name = "zip_test">
	    <echo>begin zip...</echo>
	    <zip destFile="${bin}\qzonetest.apk">
	        <zipfileset dir = "${bin}\android_qzone" includes="**/*"/>
	    </zip>
	        <echo>end zip...</echo>
	      <delete dir="${bin}/android_qzone" />
	</target>
	
	<macrodef name="signjarjdk7"> 
	    <attribute name="jar" /> 
	    <attribute name="signedjar" /> 
	    <attribute name="keystore" /> 
	    <attribute name="storepass" /> 
	    <attribute name="alias" /> 
	    <attribute name="keypass" /> 
	    <attribute name="verbose" /> 
	    <sequential> 
	        <exec executable="jarsigner" failonerror="true"> 
	            <!-- magic key --> 
	            <arg line="-verbose -digestalg SHA1 -sigalg MD5withRSA" /> 
	            <arg line="-keystore @{keystore} -storepass @{storepass} -keypass @{keypass}" /> 
	            <arg line="-signedjar &quot;@{signedjar}&quot;" /> 
	            <arg line="&quot;@{jar}&quot; @{alias}" /> 
	        </exec> 
    	</sequential>
	</macrodef> 

<!-- 签名 -->
	<target name="sign_qzone">
		<echo>begin sign...</echo>
		<signjarjdk7
		    alias="${key_name}"
		    jar="${bin}\qzonetest.apk"
		    keypass="${key_pass}"
		    keystore="${keystore}"
		    signedjar="${bin}\qzonetest_sign.apk"
		    storepass="${key_pass}"
		    verbose="true" />

	<echo>end sign...</echo>
	<delete file="${bin}\qzonetest.apk" />
	</target>
	<target name="copy_mapping">
	    <echo>begin copy mapping.txt</echo>
	    <copy todir="${bin}" filtering="true">
			<fileset dir="${project_path}">
				<include name="mapping.txt" />
			</fileset>
		</copy>
	    <delete file="${project_path}\mappint.txt"/>
	</target>
	<target name="copy_dev_apk">
	     <echo>begin copy android_qzone_dev.apk</echo>
	    <copy todir="${bin}" filtering="true">
			<fileset dir="${project_path}">
				<include name="android_qzone_dev.apk" />
			</fileset>
		</copy>
	</target>
	<target name="copy_sign_apk">
	      <echo>begin copy android_sign_dev.apk</echo>
	    <copy todir="${bin}" filtering="true">
			<fileset dir="${project_path}">
				<include name="android_qzone_sign.apk" />
			</fileset>
		</copy>
	    
	</target>
</project>
